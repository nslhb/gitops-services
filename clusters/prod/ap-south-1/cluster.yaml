apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: prod
  region: ap-south-1
  version: "1.20"

vpc:
  id: "vpc-082e04294c9380fe9"
  clusterEndpoints:
    publicAccess: true
    privateAccess: true
  subnets:
    public:
      ap-south-1a:
        id: "subnet-093de4c9c0df7aa06"
      ap-south-1b:
        id: "subnet-0f11661aa8337a066"
    private:
      ap-south-1a:
        id: "subnet-009a3d4c0147e8e0c"
      ap-south-1b:
        id: "subnet-000e508c6619a9f97"
iam:
  withOIDC: true
  fargatePodExecutionRolePermissionsBoundary: arn:aws:iam::901688089596:policy/Default-Boundary-Policy
  serviceAccounts:
    - metadata:
        name: aws-load-balancer-controller
        namespace: kube-system
      roleName: load-balancer-ap-south-1
      wellKnownPolicies:
        awsLoadBalancerController: true
    - metadata:
        name: external-dns
        namespace: kube-system
      roleName: external-dns-ap-south-1
      wellKnownPolicies:
        externalDNS: true
    - metadata:
        name: cluster-autoscaler
        namespace: kube-system
      roleName: cluster-autoscaler-ap-south-1
      wellKnownPolicies:
        autoScaler: true
    - metadata:
        name: ebs-csi-driver
        namespace: kube-system
      roleName: ebs-csi-driver-ap-south-1
      wellKnownPolicies:
        ebsCSIController: true
    - metadata:
        name: terraform-sync-workspace
        namespace: kube-system
      roleName: terraform
      attachPolicyARNs:
        - "arn:aws:iam::aws:policy/AdministratorAccess"
    - metadata:
        name: kubernetes-external-secrets
        namespace: kube-system
      roleName: external-secrets
      attachPolicy:
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetResourcePolicy
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - ssm:GetParameter
            Resource:
              - "*"
    - metadata:
        name: kube-bench
        namespace: kube-system
      roleName: kube-bench-ap-south-1
      attachPolicy:
        Statement:
          - Effect: Allow
            Action:
              - securityhub:BatchImportFindings
            Resource:
              - "arn:aws:securityhub:us-east-1::product/aqua-security/kube-bench"

managedNodeGroups:
  - name: system-1203
    instanceType: "t4g.xlarge"
    desiredCapacity: 1
    minSize: 1
    maxSize: 10
    volumeType: gp3
    volumeSize: 25
    volumeEncrypted: true
    volumeKmsKeyID: ef15819c-c086-4aba-9430-d54af36d8b53
    privateNetworking: true
    amiFamily: Bottlerocket
    disableIMDSv1: true
    securityGroups:
      withLocal: false
      attachIDs:
        - sg-0e2468ff948c63a98
    iam:
      instanceRoleARN: arn:aws:iam::901688089596:role/EKS-Default-SSM-AD-Role
    labels:
      workload: system
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/prod: "owned"
      k8s.io/cluster-autoscaler/node-template/label/workload: system
      k8s.io/cluster-autoscaler/node-template/taint/CriticalAddonsOnly: NoSchedule
    taints:
      - key: CriticalAddonsOnly
        value: "true"
        effect: "NoSchedule"
  - name: monitoring-1203
    instanceType: r6g.xlarge
    desiredCapacity: 1
    minSize: 1
    maxSize: 10
    volumeType: gp3
    volumeSize: 25
    volumeEncrypted: true
    volumeKmsKeyID: ef15819c-c086-4aba-9430-d54af36d8b53
    privateNetworking: true
    amiFamily: Bottlerocket
    disableIMDSv1: true
    securityGroups:
      withLocal: false
      attachIDs:
        - sg-0e2468ff948c63a98
    iam:
      instanceRoleARN: arn:aws:iam::901688089596:role/EKS-Default-SSM-AD-Role
    labels:
      workload: monitoring
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/prod: "owned"
      k8s.io/cluster-autoscaler/node-template/label/workload: monitoring
      k8s.io/cluster-autoscaler/node-template/taint/monitoring: NoSchedule
    taints:
      - key: monitoring
        value: "true"
        effect: "NoSchedule"
  - name: general-compute-1203
    instanceType: m5a.8xlarge
    desiredCapacity: 10
    minSize: 1
    maxSize: 10
    volumeType: gp3
    volumeSize: 100
    volumeEncrypted: true
    volumeKmsKeyID: ef15819c-c086-4aba-9430-d54af36d8b53
    privateNetworking: true
    amiFamily: Bottlerocket
    disableIMDSv1: true
    securityGroups:
      withLocal: false
      attachIDs:
        - sg-0e2468ff948c63a98
    iam:
      instanceRoleARN: arn:aws:iam::901688089596:role/EKS-Default-SSM-AD-Role
    labels:
      falco: enabled
      compute: generic
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/prod: "owned"
      k8s.io/cluster-autoscaler/node-template/label/workload: general-compute
  - name: gpu-compute-1203
    instanceType: g4dn.12xlarge
    desiredCapacity: 1
    minSize: 0
    maxSize: 3
    volumeType: gp3
    volumeSize: 100
    volumeEncrypted: true
    volumeKmsKeyID: ef15819c-c086-4aba-9430-d54af36d8b53
    privateNetworking: true
    securityGroups:
      withLocal: false
      attachIDs:
        - sg-0e2468ff948c63a98
    iam:
      instanceRoleARN: arn:aws:iam::901688089596:role/EKS-Default-SSM-AD-Role
    labels:
      falco: enabled
      compute: gpu
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/prod: "owned"
      k8s.io/cluster-autoscaler/node-template/label/workload: gpu-compute
      k8s.io/cluster-autoscaler/node-template/taint/gpu-intensive: NoSchedule
    taints:
      - key: gpu-intensive
        value: "true"
        effect: "NoSchedule"
  - name: compute-intensive-1203
    instanceType: c5a.4xlarge
    desiredCapacity: 2
    minSize: 1
    maxSize: 10
    volumeType: gp3
    volumeSize: 100
    volumeEncrypted: true
    volumeKmsKeyID: ef15819c-c086-4aba-9430-d54af36d8b53
    privateNetworking: true
    amiFamily: Bottlerocket
    disableIMDSv1: true
    securityGroups:
      withLocal: false
      attachIDs:
        - sg-0e2468ff948c63a98
    iam:
      instanceRoleARN: arn:aws:iam::901688089596:role/EKS-Default-SSM-AD-Role
    labels:
      falco: enabled
      compute: cpu-intensive
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/prod: "owned"
      k8s.io/cluster-autoscaler/node-template/label/workload: compute-intensive
      k8s.io/cluster-autoscaler/node-template/taint/cpu-intensive: NoSchedule
    taints:
      - key: cpu-intensive
        value: "true"
        effect: "NoSchedule"
  - name: memory-intensive-1203
    instanceType: r5a.8xlarge
    desiredCapacity: 1
    minSize: 1
    maxSize: 10
    volumeType: gp3
    volumeSize: 100
    volumeEncrypted: true
    volumeKmsKeyID: ef15819c-c086-4aba-9430-d54af36d8b53
    privateNetworking: true
    amiFamily: Bottlerocket
    disableIMDSv1: true
    securityGroups:
      withLocal: false
      attachIDs:
        - sg-0e2468ff948c63a98
    iam:
      instanceRoleARN: arn:aws:iam::901688089596:role/EKS-Default-SSM-AD-Role
    labels:
      falco: enabled
      compute: memory-intensive
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/prod: "owned"
      k8s.io/cluster-autoscaler/node-template/label/workload: memory-intensive
      k8s.io/cluster-autoscaler/node-template/taint/memory-intensive: NoSchedule
    taints:
      - key: memory-intensive
        value: "true"
        effect: "NoSchedule"

cloudWatch:
  clusterLogging:
    enableTypes: [ "authenticator" ]

addons:
  - name: vpc-cni
    version: latest
  - name: coredns
    version: latest
  - name: kube-proxy
    version: latest

gitops:
  flux:
    gitProvider: github
    flags:
      owner: nslhb
      repository: services.nslhub.com
      branch: main
      namespace: flux-system
      path: clusters/prod/ap-south-1
      toleration-keys: CriticalAddonsOnly
      components-extra: "image-reflector-controller,image-automation-controller"
